{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/useEffectDemo.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","TestUseEffectDemo","props","useState","count","setCount","name","user","setUser","username","setUsername","useEffect","document","title","console","log","onClick"],"mappings":"iGAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,8EI0CeC,UAvCW,SAACC,GAAW,IAAD,EACPC,mBAAS,GADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAETF,mBAAS,CAC7BG,KAAM,cAHuB,mBAE1BC,EAF0B,KAEpBC,EAFoB,OAMDL,mBAAS,aANR,mBAM1BM,EAN0B,KAMhBC,EANgB,KAyBjC,OAhBAC,qBAAU,WACNC,SAASC,MAAT,sBAAgCT,EAAhC,aAIJO,qBAAU,WACNG,QAAQC,IAAI,iCACb,CAACN,IAGJE,qBAAU,WACNG,QAAQC,IAAI,6BACb,CAACR,IAEJA,EAAKD,KAAO,aAEJ,6BACJ,0CAAgBF,GAChB,kBAAC,IAAD,CAAQY,QAAS,kBAAMX,EAASD,EAAO,KAAvC,YACA,6BACA,6BACA,wCAAcK,EAASH,MACvB,kBAAC,IAAD,CAAQU,QAAS,kBAAMN,EAAY,gBAAnC,2BACA,6BACA,6BACA,mDACA,kBAAC,IAAD,CAAQM,QAAS,kBAAMR,EAAQ,MAA/B","file":"static/js/10.387d8369.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect} from 'react'\nimport { Button } from 'antd'\n\nconst TestUseEffectDemo = (props) => {\n    const [count, setCount] = useState(0)\n    const [user, setUser] = useState({\n        name: 'zhangjing'\n    })\n\n    const [username, setUsername] = useState('zhangjing')\n\n    // 每一次渲染完都会执行\n    useEffect(() => {\n        document.title = `You clicked ${count} times`\n    })\n\n    // 仅仅当username变化的时候才执行\n    useEffect(() => {\n        console.log('username 改变了')\n    }, [username])\n\n    // 只比较对象的引用\n    useEffect(() => {\n        console.log('user 改变了')\n    }, [user])\n\n    user.name = 'zhangjing1'\n\n    return (<div>\n        <p>You clicked {count}</p>\n        <Button onClick={() => setCount(count+ 1)}>click me</Button>\n        <br />\n        <br />\n        <p>username: {username.name}</p>\n        <Button onClick={() => setUsername('zhangjing1')}>click me to setUsername</Button>\n        <br />\n        <br />\n        <p>test change a object</p>\n        <Button onClick={() => setUser({})}>click me to change user</Button>\n    </div>)\n}\n\nexport default TestUseEffectDemo"],"sourceRoot":""}