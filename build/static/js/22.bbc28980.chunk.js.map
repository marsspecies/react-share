{"version":3,"sources":["pages/funcMemo.jsx"],"names":["ChildShallow","React","memo","props","console","log","name","ChildDeep","user","prevProps","nextProps","ChildNormal","TestMemo","state","count","handleChick","setState","handleCount","this","onClick","Component"],"mappings":"6KAGMA,EAAeC,IAAMC,MAAK,SAACC,GAE7B,OADAC,QAAQC,IAAI,qCAER,6BACI,gDAAiBF,EAAMG,UAO7BC,EAAYN,IAAMC,MAAK,SAACC,GAE1B,OADAC,QAAQC,IAAI,kCAER,6BACI,yCAAeF,EAAMK,KAAKF,UAGnC,SAACG,EAAWC,GACX,OAAOD,EAAUD,KAAKF,OAASI,EAAUF,KAAKF,QAG5CK,EAAc,SAAAR,GAEhB,OADAC,QAAQC,IAAI,sCAER,yDAIFO,E,2MACFC,MAAQ,CACJP,KAAM,YACNE,KAAM,CACFF,KAAM,aAEVQ,MAAO,G,EAEXC,YAAc,WACV,EAAKC,SAAS,CACVV,KAAM,cACNE,KAAM,CACFF,KAAM,gB,EAIlBW,YAAc,WACV,EAAKD,SAAS,CACVF,MAAO,EAAKD,MAAMC,MAAQ,K,wEAI9B,OACI,6BACI,kBAACH,EAAD,MACA,6BACA,6BACA,kBAACX,EAAD,CAAcM,KAAMY,KAAKL,MAAMP,OAC/B,6BACA,6BACA,kBAACC,EAAD,CAAWC,KAAMU,KAAKL,MAAML,OAC5B,6BACA,6BACA,kBAAC,IAAD,CAASW,QAASD,KAAKH,aAAvB,yBACA,6BACA,6BACA,kBAAC,IAAD,CAAQI,QAASD,KAAKD,aAAtB,aACA,2BAAIC,KAAKL,MAAMC,Y,GArCRb,IAAMmB,WA8CdR","file":"static/js/22.bbc28980.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nconst ChildShallow = React.memo((props) => {\r\n    console.log('ChildShallow渲染了---')\r\n    return (\r\n        <div>\r\n            <p>ChildShallow：{props.name}</p>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n// React.memo只传一个参数默认浅比较， 传入第二个参数为一个函数的时候，会根据自定义的函数进行比较，该函数默认接收两个参数\r\nconst ChildDeep = React.memo((props) => {\r\n    console.log('ChildDeep渲染了---')\r\n    return (\r\n        <div>\r\n            <p>ChildDeep: {props.user.name}</p>\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    return prevProps.user.name === nextProps.user.name\r\n})\r\n\r\nconst ChildNormal = props => {\r\n    console.log('ChildNormal渲染了---- ')\r\n    return (\r\n        <div>this  is a normal child</div>\r\n    )\r\n}\r\n\r\nclass TestMemo extends React.Component {\r\n    state = {\r\n        name: 'zhangjing',\r\n        user: {\r\n            name: 'zhangjing'\r\n        },\r\n        count: 0\r\n    }\r\n    handleChick = () => {\r\n        this.setState({\r\n            name: 'zhangjing11',\r\n            user: {\r\n                name: 'zhangjing'\r\n            }\r\n        })\r\n    }\r\n    handleCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChildNormal />\r\n                <br />\r\n                <br />\r\n                <ChildShallow name={this.state.name} />\r\n                <br />\r\n                <br />\r\n                <ChildDeep user={this.state.user} />\r\n                <br />\r\n                <br />\r\n                <Button  onClick={this.handleChick}>click to change state</Button>\r\n                <br />\r\n                <br />\r\n                <Button onClick={this.handleCount}>add count</Button>\r\n                <p>{this.state.count}</p>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TestMemo"],"sourceRoot":""}