{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/useCallbackDemo.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Timer","Date","now","MemoTimer","memo","UseCallbackDemo","props","useState","count","setCount","handleClick","memorizedFunction","useCallback","onClick","onclick"],"mappings":"gGAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,8EIGA,SAASC,IACL,OACI,uCAAaC,KAAKC,OAG1B,IAAMC,EAAYC,eAAKJ,GAmBRK,UAjBf,SAAyBC,GAAQ,IAAD,EACFC,mBAAS,GADP,mBACrBC,EADqB,KACdC,EADc,KAGtBC,EAAc,WAChBD,EAASD,EAAQ,IAEfG,EAAoBC,sBAAYF,EAAa,IACnD,OACI,6BACI,qCAAWF,GACX,kBAAC,IAAD,CAAQK,QAASH,GAAjB,aACA,sDAA2B,kBAACV,EAAD,CAAOc,QAASJ,IAA3C,KACA,kDAAuB,kBAACP,EAAD,CAAWW,QAASH","file":"static/js/8.c2c6dc3a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { memo, useCallback, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nfunction Timer() {\r\n    return (\r\n        <span>time: {Date.now()}</span>\r\n    )\r\n}\r\nconst MemoTimer = memo(Timer)\r\n\r\nfunction UseCallbackDemo(props) {\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleClick = () => {\r\n        setCount(count + 1)\r\n    }\r\n    const memorizedFunction = useCallback(handleClick, [])\r\n    return (\r\n        <div>\r\n            <p>count: {count}</p>\r\n            <Button onClick={handleClick}>add count</Button>\r\n            <p>not memorized function: <Timer onclick={handleClick} /> </p>\r\n            <p>memorized function: <MemoTimer onclick={memorizedFunction} /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseCallbackDemo\r\n"],"sourceRoot":""}