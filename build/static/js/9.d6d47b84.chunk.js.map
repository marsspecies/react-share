{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/useContextDemo.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","MyContext","React","createContext","name","userInfor","age","Child","props","getContext","useContext","console","log","Consumer","toggleContext","onClick","TestUseContextDemo","useState","userInfo","newContext","setContext","assign","context","Provider"],"mappings":"gGAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,8EIUMC,EAAYC,IAAMC,cAPX,CACTC,KAAM,YACNC,UAAW,CACPC,IAAK,MAMPC,EAAQ,SAACC,GACX,IAAMC,EAAaC,qBAAWT,GAE9B,OADAU,QAAQC,IAAIH,GAER,6BACI,oCAAUA,EAAWL,KAArB,KACA,kBAACH,EAAUY,SAAX,MAEQ,YAA4B,IAA1BT,EAAyB,EAAzBA,KAAMU,EAAmB,EAAnBA,cACJ,OACI,6BACI,qCAAWV,GAEPU,GAAiB,kBAAC,IAAD,CAAQC,QAAS,kBAAMD,EAAc,CAACV,KAAM,WAA5C,wBAgCtCY,UArBf,WAA+B,IAAD,EACIC,mBAAS,CACnCb,KAAM,QACNc,SAAU,CACNZ,IAAK,IAETQ,cAAe,SAACK,GACZC,EAAWrC,OAAOsC,OAAO,GAAIC,EAASH,OAPpB,mBACnBG,EADmB,KACVF,EADU,KAW1B,OACI,6BACI,kBAACnB,EAAUsB,SAAX,CAAoB1B,MAAOyB,GACvB,kBAACf,EAAD,OAEJ,kBAACA,EAAD","file":"static/js/9.d6d47b84.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useContext, useState } from 'react'\nimport { Button } from 'antd'\n\nconst user = {\n    name: 'zhangjing',\n    userInfor: {\n        age: 18\n    }\n}\n// 给context的默认值为user\nconst MyContext = React.createContext(user)\n\nconst Child = (props) => {\n    const getContext = useContext(MyContext)\n    console.log(getContext)\n    return (\n        <div>\n            <p>name: {getContext.name} </p>\n            <MyContext.Consumer>\n                {\n                    ({name, toggleContext}) => {\n                        return (\n                            <div>\n                                <p>Child: {name}</p>\n                                {\n                                    toggleContext && <Button onClick={() => toggleContext({name: 'Jack'})}>toggle context</Button>\n                                }\n                            </div>\n                        )\n                    }\n                }\n            </MyContext.Consumer>\n        </div>\n    )\n}\n\nfunction TestUseContextDemo() {\n    const [context, setContext] = useState({\n        name: 'Karen',\n        userInfo: {\n            age: 18\n        },\n        toggleContext: (newContext) => {\n            setContext(Object.assign({}, context, newContext))\n        }\n    })\n    // 在父级有使用provider的情况下获取的context为value属性的值，如果不传value则默认值为Undefined\n    return (\n        <div>\n            <MyContext.Provider value={context}>\n                <Child />\n            </MyContext.Provider>      \n            <Child />\n        </div>\n    )\n}\n\nexport default TestUseContextDemo\n"],"sourceRoot":""}